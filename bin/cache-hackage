#!/bin/bash

#/ NAME
#/     cache-hackage -- copy a package from hackage into a local repo
#/
#/ SYNOPSIS
#/     cache-hackage [package] [version]

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"
MACPORTS_ROOT="$shome"
source $shome/.profile

# entry point
function main {
  local nm_package="$1"; shift
  local ver_package="$1"; shift

  mkdir -p "$FLAGS_local/$nm_package-$ver_package"
  curl -o "$FLAGS_local/$nm_package-$ver_package/tarball" "$FLAGS_remote/$nm_package/$ver_package/$nm_package-$ver_package.tar.gz"
}

# define command line options:
#   var name, default, description, short option
DEFINE_string 'remote' 'http://hackage.haskell.org/packages/archive' 'remote hackage repo' 'r'
DEFINE_string 'local' "$shome/hackage" 'local hackage repo' 'l'

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

if [[ "$#" < 1 ]]; then
  logger_fatal "missing package name"
  exit 1
fi

if [[ "$#" < 2 ]]; then
  logger_fatal "missing package version"
  exit 1
fi

# pass arguments to entry point
main "$@"
